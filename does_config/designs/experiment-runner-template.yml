---
# This is the experiment template for the Experiment runner.
# 
# This file presents a singular experiment that uses the evaluation framework.
first_exp: # This is the template experiment, you can make as may experiments in this file as you want. However, each experiment must follow the schema specified by this experiment.
  n_repetitions: 1 # The number of times this experiments should be repeated. This is an option provided by the Design of Experimenst suite and is not specific to the evalatuation framework
  host_types: 
    # Here, we define the required hosts types for an experiment. The evaluation framework provides 2 default sets of experiment host
    # - hserv1, hserv2: Here, the experiment uses c5.9xlarge instances as experiment hosts. Please note that the hserv1 host_type is expected to contain the main server instance (i.e. Player 0)
    # - server, server2: Here, the experiment uses t2.2xlarge instances as experiment hosts. Please not that the server host_type is expected to contain the main server instance (i.e. Player 0)
    #
    # Please uncomment the set of host types that you wish to use for the given experiments (or implement your own. More to that can be found in the main README.md of the evaluation framework.)
    
    ###################################################
    # hserv1, hserv2                                  #
    ###################################################
    # --> Start uncommenting here
    #hserv1:
    #  n: 1
    #  check_status: True # Please do not change this unless you know what you are doing
    #  init_roles:
    #    - ml-example-setup-1
    #    - setup-poetry
    #   #- Add additonal configuration steps here
    #  $CMD$:
    #    - "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 0 2.0"
    #hserv2:
    #  n: 2 # This is the number of additonal experiment hosts
    #  check_status: True # Please do not change this unless you know what you are doing
    #  init_roles:
    #    - ml-example-setup-1
    #    - setup-poetry 
    #   #- Add additonal configuration steps here
    #  $CMD$:
    #    - "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 1 2.0"
    #    - "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 2 2.0"
    #   #- "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 3 2.0"
    #   #- "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 4 2.0"
    #   #- .... (This shows how additional servers can be defined. The evaluation framework supports up to 19 additonal servers, because the base image contains 20 player certificates.) Please do not forget to adapt the 'n' key in this section and the 'player_count' key in the base_experiment section.
    # --> End uncommenting here

    ###################################################
    # server,server2                                  #
    ###################################################
    # --> Start uncommenting here
    #server:
    #  n: 1
    #  check_status: True # Please do not change this unless you know what you are doing
    #  init_roles:
    #    - ml-example-setup-1
    #    - setup-poetry
    #   #- Add additonal configuration steps here.
    #  $CMD$:
    #    - "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 0 2.0"
    #server2:
    #  n: 2
    #  check_status: True # Please do not change this unless you know what you are doing
    #  init_roles:
    #    - ml-example-setup-1
    #    - setup-poetry
    #   #- Add additonal configuration steps here. 
    #  $CMD$:
    #    - "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 1 2.0"
    #    - "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 2 2.0"
    #   #- "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 3 2.0"
    #   #- "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 4 2.0"
    #   #- .... (This shows how additional servers can be defined. The evaluation framework supports up to 19 additonal servers, because the base image contains 20 player certificates.) Please do not forget to adapt the 'n' key in this section and the 'player_count' key in the base_experiment section.
    # --> End uncommenting here

    ###################################################
    # custom_type_1, custom_type_2                    #
    ###################################################
    # --> Start uncommenting here
    #custom_type_1:
    #  n: 1
    #  check_status: True # Please do not change this unless you know what you are doing
    #  init_roles:
    #    - ml-example-setup-1
    #    - setup-poetry
    #   #- Add additonal configuration steps here
    #  $CMD$:
    #    - "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 0 2.0"
    #custom_type_2:
    #  n: 2
    #  check_status: True # Please do not change this unless you know what you are doing
    #  init_roles:
    #    - ml-example-setup-1
    #    - setup-poetry 
    #   #- Add additonal configuration steps here
    #  $CMD$:
    #    - "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 1 2.0"
    #    - "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 2 2.0"
    #   #- "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 3 2.0"
    #   #- "bash {{exp_code_dir}}/utils/experiment-runner.sh \"{{exp_code_dir}}\" 4 2.0"
    #   #- .... (This shows how additional servers can be defined. The evaluation framework supports up to 19 additonal servers, because the base image contains 20 player certificates.) Please do not forget to adapt the 'n' key in this section and the 'player_count' key in the base_experiment section.
    # --> End uncommenting here


  base_experiment:
    mpc: # Here, the evaluation framework specific configuration options are stored
      abs_path_to_code_dir: "{{exp_code_dir}}" # This options is required by the Expermint Runner and must not be changed, unless you know what you are doing.
      player_count: 3 # The total number of computational servers is defined here. Please ensure player_count = n (of main server category) + n(of additional server category) (or player_count = sum of all servers over all host categories)
      
      # The player_0_hostname key defines the hostname of the server executing the main MPC protocol virtual machine
      # We use a custom query command to query the dynamic DNS hostname of the main experiment host (therefore the need for the two separate host_types, as we can only query over all instances of a given host_type)
      # We provide the corresponding query strings for all default host_type sets and a template string for custom host_types
      # Please uncomment the option that is most beffiting for you 
      #player_0_hostname: "[% exp_host_lst | json_query(\"[?host_type=='server'].private_dns_name\") | first %]"
      #player_0_hostname: "[% exp_host_lst | json_query(\"[?host_type=='hserv1'].private_dns_name\") | first %]"
      #player_0_hostname: "[% exp_host_lst | json_query(\"[?host_type=='custom_type_1'].private_dns_name\") | first %]"
      
      script_name: "test-assign" # The name of the MPC script that should be compiled. Please ensure that the MPC script is in the 'scripts' folder  and has a file ending of '.mpc'. Then, provide the file name without the file ending here.
      script_args: # Here, we provide the arguments with which the script names in script_name should be compiled with. If no arguments are given, please specify [] (the empty list) for the script_args entry.
        - 38

      protocol_setup: "emulate_env" # Here, we specify the protocol entry option.
      # The evaluation framework provides support for the following protocols per default:
      # 'emulate_env' => './emulate.x' ; Only 1 server is supported ; The emulator
      # 'semi_honest_3' => './replicated-ring-party.x' ; 3 computational servers must be specified ; semi-honest corruption
      # 'malicious_3_party' => './brain-party.x' ; 3 computational servers must be specified ; malicious corruption
      # 'semi_honest_bin_3' => './replicated-bin-party.x' ; 3 computational servers must be specified ; semi-honest corruption
      # 'malicious_bin_3' => './ps-rep-bin-party.x' ; 3 computational servers must be specified ; malicious corruption
      # 'shamir_semi_honest_n' => './shamir-party.x' ; 3 or more computational servers can be specified ; semi-honest corruption
      # 'shamir_malicious_n' => './malicious-shamir-party.x' ; 3 or more computational servers can be specified ; malicious corruption
      #
      # For more details on the supported backend, please look into the MP-SPDZ's main README.md under the Honest-Majority Section.

      input_file_name: "mnist-audit-conv-10epoch.zip" # This is the name of the file stored in the AWS input bucket. THe file named here will be processed by the Experiment Runner and all input files provided by the named input file container will be placed into the Player-Data folder. 

# Here the ETL pilelines are defined
$ETL$:
  first_exp_pipeline: # This is the minimal pipeline template that integrates the Output processor (the MP-SPDZ specific Extractors) into the Design of Experiments suite ETL Pipeline
    experiments: [first_exp] # Here, we specify which experiments are processed by the given pipeline
    extractors:
      MpSpdzStderrExtractor:  {} # There extractors are essential for the Output Processing Functionality of the evaluation framework
      MpSpdzResultExtractor: {}  # These extractors process the specific outputs generated by the output_utils.py and the MPC protocol VMs 
     #MpSpdzStderrExtractor:  # This Commented out version of the MpSpdzStderrExtractor has the timing parsing functionality for the global clock enabled. Please replace the above MpSpdzStderrExtractor specification if the timing parsing functionalty should be enabled.
     #  timers: [-1]  
      IgnoreExtractor: {}        # Specifying this processor is recommended to prevent errors occuring because some files where not processes or should not be processed
    transformers: []
    loaders:
      CsvSummaryLoader:
        output_dir: etl_results
  # Additional pipelines can be defined here, just please ensure that the MpSpdzStderrExtractor and the MpSdpzResultExtractor are part of these pipeline definintions. Without these Extractors defined in the pipeline, the Output Processor of the evaluation framework will not be part of the pipeline. And the evaluation framework will not be able to perform its output processing capabilities.