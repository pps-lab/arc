---

# TODO [nku] could add default skeleton for super etl

# Checkout the example from the demo_project: demo_project/doe-suite-config/super_etl/demo_plots.yml

$SUITE_ID$:

  audit_robustness:
    audit_robustness_3pc: 1705955178
    audit_robustness_3pc_wan: 1705960388

  audit_knnshapley:
    audit_sample_knnshapley: 1705957720
  audit_knnshapley_wan:
    audit_sample_knnshapley_wan: 1705958533 # TODO, in pr

  audit_fairness:
    audit_fairness_3pc: 1705954360
    audit_fairness_3pc_wan: 1705955928

  audit_shap:
    audit_shap: 1705957649

  audit_shap_wan:
    audit_shap_wan: 1705959794

  inference_3pc: { sh: 1705933736, mal: 1705933736 }
  inference_3pc_wan: 1705947503

  train_3pc: 1705937567
  train_3pc_wan: 1705939961

$ETL$:

  costs:
    experiments:
      audit_robustness: "*"
      audit_knnshapley: "*"
      audit_knnshapley_wan: "*"
      audit_fairness: "*"
      audit_shap: "*"
      audit_shap_wan: "*"
      inference_3pc: "*"
      inference_3pc_wan: "*"
      train_3pc: "*"
      train_3pc_wan: "*"

    extractors:
#      MpSpdzResultExtractor: { } # this parses results from the audit
      MpSpdzStderrExtractor:
        file_regex:
          - ^stderr\.log$
          - ^cerebro_input_stderr\.log$
          - ^cerebro_output_stderr\.log$
          - ^sha3_input_stderr\.log$
          - ^sha3_output_stderr\.log$
      ConsistencyExtractor: { }
      IgnoreExtractor:
        file_regex:
          - ^stdout\.log$
          - ^cerebro_input_stdout\.log$
          - ^cerebro_output_stdout\.log$
          - ^result-P[0-9]+-[0-9]+\.txt$
          - ^sha3_input_stdout\.log$
          - ^sha3_output_stdout\.log$
    transformers:
      - df.replace: { to_replace: "^adult_[a-zA-Z0-9]*", value: "adult", regex: True }
      - df.replace: { to_replace: "^mnist_full_[a-zA-Z0-9]*", value: "mnist_full", regex: True }
      - df.replace: { to_replace: "^cifar_alexnet_[a-zA-Z0-9]*", value: "cifar_alexnet", regex: True }

#      - name: TimerBandwidthAggregator
#      - name: ComputationMultiplierTransformer
#        timer_id_computation: 100
#      - name: CerebroMultiplierTransformer
#      - name: Sha3MultiplierTransformer

      - name: StatTransformer
#        groupby_columns: [ suite_name, run, host_idx, exp_name, 'mpc.script_name', 'network_type', 'mpc.protocol_setup', 'mpc.domain', 'mpc.script_args.dataset', 'consistency_args.type' ]
        groupby_columns: [ suite_name, run, host_idx, exp_name, 'mpc.script_name', 'network_type' ]
        stats:
          mpc_time_s: [ "spdz_timer_99", "spdz_timer_100", "spdz_timer_1102", "spdz_timer_101" ]

          auditing_overhead_s: [ "consistency_convert_shares_share_switch_output_mus",
                                 "consistency_poly_commit_commit_mus",
                                 "consistency_poly_commit_sign_mus",
                                 "consistency_poly_commit_sign_sk_mus",
                                 "consistency_convert_shares_share_switch_input_mus",
                                 "consistency_poly_eval_poly_eval_mus",
                                 "consistency_prove_verify_Prove Verify_mus",

                                 "spdz_timer_98",
                                 "spdz_timer_97", # output timers

                                 "cerebro_input_spdz_timer_95",
                                 "cerebro_output_spdz_timer_95", # output timers
                                 "consistency_cerebro_verify_Exponentiate_mus",

                                 "sha3_input_spdz_timer_98",
                                 "sha3_output_spdz_timer_97",
          ]

          auditing_overhead_bytes: [ "consistency_convert_shares_share_switch_output_global_bytes",
                                     "consistency_poly_commit_commit_global_bytes",
                                     "consistency_poly_commit_sign_global_bytes",
                                     "consistency_poly_commit_sign_sk_global_bytes",
                                     "consistency_convert_shares_share_switch_input_global_bytes",
                                     "consistency_poly_eval_poly_eval_global_bytes",
                                     "consistency_prove_verify_global_bytes",

                                     "spdz_timer_bw_98",
                                     "spdz_timer_bw_97",

                                     "cerebro_input_spdz_timer_bw_95", # output timers
                                     "cerebro_output_spdz_timer_bw_95", # output timers

                                     "sha3_input_spdz_timer_bw_98",
                                     "sha3_output_spdz_timer_bw_97"
          ]

      # multiply auditing_overhead_s by $4.5 to get total cost
      - df.eval: { expr: "cost = (mpc_time_s + auditing_overhead_s) * 1.746 / 3600" } # 1.746 USD per hour
      - df.groupby: { by: [ suite_name, exp_name ] }
      - df.sum: {}

    loaders:
      CsvSummaryLoader: { }