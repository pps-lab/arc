$SUITE_VARS$:
  sleep_time: 2.0
  _python_pre: "export PYTHONPATH={{ exp_code_dir }}/utils && . {{ exp_code_dir }}/.venv/bin/activate"
  _python_path: "[% my_run._python_pre %] && {{ exp_code_dir }}/.venv/bin/python"
  cmd: "[% my_run._python_path %] -m  python_utils.scripts.experiment_runner --player-number <PLAYER-ID> --sleep-time [% my_run.sleep_time %]"


audit:
  n_repetitions: 1
  host_types:
    compute:
      n: 4
      check_status: True
      init_roles:
        - setup-base
        - download-dataset
      $CMD$:
      - main: "[% my_run.cmd | replace('<PLAYER-ID>', 0) %]"
      - main: "[% my_run.cmd | replace('<PLAYER-ID>', 1) %]"
      - main: "[% my_run.cmd | replace('<PLAYER-ID>', 2) %]"
      - main: "[% my_run.cmd | replace('<PLAYER-ID>', 3) %]"


  base_experiment:
    mpc:
      player_0_hostname: "[% exp_host_lst | json_query('[?host_type==`compute`].private_dns_name') | first %]"
      abs_path_to_code_dir: "{{ exp_code_dir }}"
      player_count: 4
      protocol_setup: "rep4-ring-party"
      script_name: "audit_owner_unlearn"
      script_args:
        debug: False
        emulate: False
        dataset: "MNIST_Trigger_mal_10_parties_4"
        batch_size: 128
        n_threads: 32

        # unlearn specific
        learning_rate: 0.01
        mod_zscore_threshold: 2.5

        audit_trigger_idx: 0 # select single audit trigger

#     skip_compile: True


$ETL$:
  extract_mpspdz:
    experiments: "*"
    extractors:
      MpSpdzStderrExtractor:  {}
      MpSpdzResultExtractor: {}
      IgnoreExtractor: {}
    transformers: []
    loaders:
      CsvSummaryLoader:
        output_dir: etl_results