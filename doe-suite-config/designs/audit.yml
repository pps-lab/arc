$SUITE_VARS$:
  sleep_time: 2.0 # TODO [hly] can remove (also from experiment runner) as it does not have any effect

  _python_pre: "export PYTHONPATH={{ exp_code_dir }}/utils && . {{ exp_code_dir }}/.venv/bin/activate"
  _python_path: "[% my_run._python_pre %] && {{ exp_code_dir }}/.venv/bin/python"
  cmd_mpspdz: "[% my_run._python_path %] -m  python_utils.scripts.experiment_runner --player-number <PLAYER-ID> --sleep-time [% my_run.sleep_time %]"

  n_parties: 3

  consistency_args:
    abs_path_to_code_dir: "{{ exp_consistency_dir }}"
    hosts_file: "{{ exp_consistency_hosts_file }}"
    pc: kzg
    pp_args: $FACTOR$ # max of input sizes we need

#  commit_args:
#    commitments:
#      size_x: 2351
#      size_y: 1

  mpc:
    player_0_hostname: "[% exp_host_lst | json_query('[?host_type==`consistency`].private_dns_name') | default(['<UNDEFINED-DNS>'], true) | first %]"
    abs_path_to_code_dir: "{{ exp_code_dir }}"
    player_count: "[% my_run.n_parties %]"
    protocol_setup: "mal-rep-field-party"

    domain: custom_256
    custom_prime: '8444461749428370424248824938781546531375899335154063827935233455917409239041'
    compiler_args: [ '-F 251', '-C', '--budget', '10000' ]

    script_name: $FACTOR$

    script_args:

      n_samples: 1
      n_input_parties: "[% my_run.n_parties %]"

      debug: False  # for a final benchmarking run, can also use `debug: False`, this should then only release no secret info
      emulate: False
      dataset: $FACTOR$

      # in a network with latency, a high batch size for ml.py is key to a good performance (60k raised insufficient memory error)
      batch_size: 128 #1024 #256 # was 128 before   # 60000 -> insufficient memory
      n_threads: 32 #128 #64 # TODO before was 32 -> see if this helps (128 raises too many files runtime error)

      audit_trigger_idx: 0 # select single audit trigger (from all)


    stage: # "compile" in run and then in next run "run"
      $FACTOR$: [ compile, run ] # ensure that this is last factor


audit_3pc:
  n_repetitions: 1
  host_types:
    consistency:
      n: 3
      check_status: True
      init_roles:
        - setup-base
        - setup-consistency
        - download-dataset
        #        - setup-largeprimes
#        - setup-network-delay # adjust latency + bandwidth limit -> doe-suite-config/roles/setup-network-delay/vars/main.yml
      $CMD$:
        - main: "[% my_run.cmd_mpspdz | replace('<PLAYER-ID>', 0) %]"
        - main: "[% my_run.cmd_mpspdz | replace('<PLAYER-ID>', 1) %]"
        - main: "[% my_run.cmd_mpspdz | replace('<PLAYER-ID>', 2) %]"

  base_experiment:

    mpc:
      protocol_setup: "rep-field-party"
      script_name:
        $FACTOR$: [ "audit_sample_knnshapley", "audit_rs", "audit_prediction_shap" ]


  factor_levels:

    - consistency_args:
        pp_args: 17634601
      mpc:
        script_args:
          dataset: ember_3party

    - consistency_args:
        pp_args: 16321393
      mpc:
        script_args:
          dataset: mnist_full_3party

    - consistency_args:
        pp_args: 431080
      mpc:
        script_args:
          dataset: cifar_alexnet_3party

    - consistency_args:
        pp_args: 431080
      mpc:
        script_args:
          dataset: adult_3p

$ETL$: {}