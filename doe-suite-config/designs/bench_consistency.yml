$SUITE_VARS$:

  _python_pre: "export PYTHONPATH={{ exp_code_dir }}/utils && . {{ exp_code_dir }}/.venv/bin/activate"
  _python_path: "[% my_run._python_pre %] && {{ exp_code_dir }}/.venv/bin/python"
  cmd_mpspdz: "[% my_run._python_path %] -m  python_utils.scripts.experiment_runner --player-number <PLAYER-ID>"

  n_samples: 2097152
  n_parties: 2

  consistency_args:
    abs_path_to_code_dir: "{{ exp_consistency_dir }}"
    hosts_file: "{{ exp_consistency_hosts_file }}"
    pc: kzg
    pp_args: "[% my_run.n_samples %]"
    prover_party: 0
    gen_pp: True # If we have to read the full parameter file of the largest one, it slows things down

  mpc:
    player_0_hostname: "[% exp_host_lst | json_query('[?host_type==`consistency`].private_dns_name') | default(['<UNDEFINED-DNS>'], true) | first %]"
    abs_path_to_code_dir: "{{ exp_code_dir }}"
    player_count: "[% my_run.n_parties %]"

    protocol_setup: "lowgear-party"
    compiler_args: [ '-F', '251', '-C', '--budget', '10000' ] #'100000000'] # budget was '1000000'1million # also look at B 5 -> cannot be used together with R
    custom_prime: '8444461749428370424248824938781546531375899335154063827935233455917409239041'

    script_name: "test_sz"

    script_args:
      n_samples: "[% my_run.n_samples %]"
      n_input_parties: "[% my_run.n_parties %]"

    stage: # "compile" in run and then in next run "run"
      $FACTOR$: [ compile, run ] # ensure that this is last factor

# this only exists for the super etl error handling


$ETL$: {}